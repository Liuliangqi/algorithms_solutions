public class Solution{
    public List<Interval> merge(List<Interval> intervals){
        if(intervals == null || intervals.size() <= 1){
            return intervals;
        }
        ArrayList<Interval> results = new ArrayList<Interval>();
        //sort accordingto start
        Collections.sort(intervals, new IntervalComparator());
        Interval last = intervals.get(0);
        for(int i = 0; i < intervals.size(); i++){
            Interval curt = intervals.get(i);
            if(last.end >= curt.start){
                last.end = Math.max(last.end, curt.end);
            }else{
                results.add(last);
                last = curt;
            }
        }
        results.add(last);
        return results;
    }
    
    private class IntervalComparator implements Comparator<Interval>{
        public int compare(Interval a, Interval b){
            return a.start - b.start;
        }
    }
}
